# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by separate terms of service, privacy policy, and support documentation.

name: Publish Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Upgrade Pip
      run: |
        pip install --upgrade pip
    - name: Install Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        export PATH=$PATH:$HOME/.poetry/bin
    - name: Install Dependencies
      run: |
        poetry install --no-interaction --only main
    - name: Configure Git
      run: |
        git remote update
        git fetch
        git checkout --track origin/main
        git config --global user.email "chrismahoney@hotmail.com"
        git config --global user.name "GitHub Actions"
        git status
    - name: Bump version
      run: |
        poetry self add poetry-bumpversion
        poetry version --short
        poetry version minor
        poetry version --short
    - name: Update Git
      run: |
        git add .
        git commit -m "Bump version to `$(poetry version --short)` [skip ci]"
        git push --force
        git status
    - name: Build Package
      run: |
        poetry build
    - name: Publish Package
      run: |
        poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
